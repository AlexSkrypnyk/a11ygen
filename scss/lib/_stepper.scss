@import "color";

@function color-stepper($c1, $c2, $ratio, $step: 1%, $autodark: false) {
  $max-steps: 1000 !default;
  $original-contrast: color-contrast-ratio($c1, $c2);

  @debug "C1: #{$c1}, C2: #{$c2}, Contrast: #{$original-contrast}";

  @if $original-contrast < $ratio {
    $c1-is-light: color-is-light($c1);
    $c2-is-light: color-is-light($c2);

    @debug "  C1 is light: #{$c1-is-light}, C2 is light: #{$c2-is-light}";

    // Run through some cases where we want to darken, or use a negative step value.
    @if $autodark {
      @if $c1-is-light and $c2-is-light {
        // Both are light colors, darken the C1.
        $step: - $step;
      } @else if not $c1-is-light and $c2-is-light {
        // C2 is light, C1 is dark but does not pass => darken more.
        $step: - $step;
      } @else if $c1-is-light and not $c2-is-light {
        // C2 is dark, C1 is light but does not pass => lighten more.
        $step: $step;
      } @else {
        // Both are dark, so lighten the C1.
        $step: $step;
      }
    }
    @debug "  Step: #{$step}";
    $step-count: 1;
    $contrast-ratio: 1;
    @while $contrast-ratio < $ratio {
      $sat-step: 0%;

      @if saturation($c1) > 10 {
        $sat-step: $step;
      }

      $c1: scale-color($c1, $lightness: $step, $saturation: $sat-step);
      $contrast-ratio: color-contrast-ratio($c1, $c2);

      $step-count: $step-count + 1;

      @if ($step-count > $max-steps) {
        @debug "Stopped: exceeded allowed max #{$max-steps} steps";
        @return $c1;
      }

      @if ($c1 == white) {
        @debug "Stopped: reached white after #{$step-count} steps";
        @return #ffffff;
      }

      @if ($c1 == black) {
        @debug "Stopped: reached black after #{$step-count} steps";
        @return #000000;
      }
    }

    @debug "Resolved: #{$c1} , Contrast: #{$contrast-ratio}  [ #{$step-count} steps]";
  }

  @return $c1;
}


